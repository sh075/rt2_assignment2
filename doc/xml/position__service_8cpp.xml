<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="position__service_8cpp" kind="file" language="C++">
    <compoundname>position_service.cpp</compoundname>
    <includes local="yes">ros/ros.h</includes>
    <includes local="yes">rt2_assignment2/RandomPosition.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/position_service.cpp</label>
        <link refid="position__service_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>rt2_assignment2/RandomPosition.h</label>
      </node>
      <node id="2">
        <label>ros/ros.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="position__service_8cpp_1a10f83119b77a8fbd085a5550955f85ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double randMToN</definition>
        <argsstring>(double M, double N)</argsstring>
        <name>randMToN</name>
        <param>
          <type>double</type>
          <declname>M</declname>
        </param>
        <param>
          <type>double</type>
          <declname>N</declname>
        </param>
        <briefdescription>
<para>random number generator </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>M</parametername>
</parameternamelist>
<parameterdescription>
<para>defines the minimum possible value of the random number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>:defines the maximum possible value of the random number</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the random number</para>
</simplesect>
This function uses the library function rand() to generate a random number and then resizes it to be in the interval [M;N]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/position_service.cpp" line="35" column="8" bodyfile="src/position_service.cpp" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="position__service_8cpp_1a933b49a6f18c149da64e3ad0b1ea9d9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool myrandom</definition>
        <argsstring>(rt2_assignment2::RandomPosition::Request &amp;req, rt2_assignment2::RandomPosition::Response &amp;res)</argsstring>
        <name>myrandom</name>
        <param>
          <type>rt2_assignment2::RandomPosition::Request &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>rt2_assignment2::RandomPosition::Response &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/position_service.cpp" line="40" column="6" bodyfile="src/position_service.cpp" bodystart="40" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="position__service_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>main function </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>always 0</para>
</simplesect>
The main funtion initializes the node and service object and waits to receive a request to the initialized service. <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/position_service.cpp" line="59" column="5" bodyfile="src/position_service.cpp" bodystart="59" bodyend="68"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file implements a position service. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Shahrzad Eskandari Majdar </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>07/08/2021</para>
</simplesect>
Services : <linebreak/>
 \posiiton_server</para>
<para>Description :</para>
<para>This node advertises a position service. When the service is required, a request containing min and max values for the x and y position is used to generate a random position between x (or y) min and x (or y) max. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="21"><highlight class="preprocessor">#include<sp/>&quot;ros/ros.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rt2_assignment2/RandomPosition.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="position__service_8cpp_1a10f83119b77a8fbd085a5550955f85ff" kindref="member">randMToN</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>N)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>M<sp/>+<sp/>(rand()<sp/>/<sp/>(RAND_MAX<sp/>/<sp/>(N<sp/>-<sp/>M)));</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>myrandom(rt2_assignment2::RandomPosition::Request<sp/>&amp;req,<sp/>rt2_assignment2::RandomPosition::Response<sp/>&amp;res)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>res.x<sp/>=<sp/><ref refid="position__service_8cpp_1a10f83119b77a8fbd085a5550955f85ff" kindref="member">randMToN</ref>(req.x_min,<sp/>req.x_max);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>res.y<sp/>=<sp/><ref refid="position__service_8cpp_1a10f83119b77a8fbd085a5550955f85ff" kindref="member">randMToN</ref>(req.y_min,<sp/>req.y_max);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>res.theta<sp/>=<sp/><ref refid="position__service_8cpp_1a10f83119b77a8fbd085a5550955f85ff" kindref="member">randMToN</ref>(-3.14,<sp/>3.14);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="position__service_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::init(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;random_position_server&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::NodeHandle<sp/>n;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//initialization<sp/>of<sp/>server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::ServiceServer<sp/>service<sp/>=<sp/>n.advertiseService(</highlight><highlight class="stringliteral">&quot;/position_server&quot;</highlight><highlight class="normal">,<sp/>myrandom);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::spin();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/position_service.cpp"/>
  </compounddef>
</doxygen>
